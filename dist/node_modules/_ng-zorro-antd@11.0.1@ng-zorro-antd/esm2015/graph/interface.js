/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
export function nzTypeDefinition() {
    return item => item;
}
export const NZ_GRAPH_LAYOUT_SETTING = {
    graph: {
        meta: {
            nodeSep: 50,
            rankSep: 50,
            edgeSep: 5
        }
    },
    subScene: {
        meta: {
            paddingTop: 20,
            paddingBottom: 20,
            paddingLeft: 20,
            paddingRight: 20,
            labelHeight: 20
        }
    },
    nodeSize: {
        meta: {
            width: 50,
            maxLabelWidth: 0,
            height: 50
        },
        node: {
            width: 50,
            height: 50,
            labelOffset: 10,
            maxLabelWidth: 40
        },
        bridge: {
            width: 5,
            height: 5,
            radius: 2,
            labelOffset: 0
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uL2NvbXBvbmVudHMvZ3JhcGgvIiwic291cmNlcyI6WyJpbnRlcmZhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBaUZILE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQVMsQ0FBQztBQUMzQixDQUFDO0FBWUQsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQW9CO0lBQ3RELEtBQUssRUFBRTtRQUNMLElBQUksRUFBRTtZQUNKLE9BQU8sRUFBRSxFQUFFO1lBQ1gsT0FBTyxFQUFFLEVBQUU7WUFDWCxPQUFPLEVBQUUsQ0FBQztTQUNYO0tBQ0Y7SUFDRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUU7WUFDSixVQUFVLEVBQUUsRUFBRTtZQUNkLGFBQWEsRUFBRSxFQUFFO1lBQ2pCLFdBQVcsRUFBRSxFQUFFO1lBQ2YsWUFBWSxFQUFFLEVBQUU7WUFDaEIsV0FBVyxFQUFFLEVBQUU7U0FDaEI7S0FDRjtJQUNELFFBQVEsRUFBRTtRQUNSLElBQUksRUFBRTtZQUNKLEtBQUssRUFBRSxFQUFFO1lBQ1QsYUFBYSxFQUFFLENBQUM7WUFDaEIsTUFBTSxFQUFFLEVBQUU7U0FDWDtRQUNELElBQUksRUFBRTtZQUNKLEtBQUssRUFBRSxFQUFFO1lBQ1QsTUFBTSxFQUFFLEVBQUU7WUFDVixXQUFXLEVBQUUsRUFBRTtZQUNmLGFBQWEsRUFBRSxFQUFFO1NBQ2xCO1FBQ0QsTUFBTSxFQUFFO1lBQ04sS0FBSyxFQUFFLENBQUM7WUFDUixNQUFNLEVBQUUsQ0FBQztZQUNULE1BQU0sRUFBRSxDQUFDO1lBQ1QsV0FBVyxFQUFFLENBQUM7U0FDZjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7XG4gIEhpZXJhcmNoeUJhc2VFZGdlSW5mbyxcbiAgSGllcmFyY2h5QmFzZU5vZGVJbmZvLFxuICBIaWVyYXJjaHlHcmFwaERlZixcbiAgSGllcmFyY2h5R3JhcGhFZGdlRGVmLFxuICBIaWVyYXJjaHlHcmFwaE5vZGVEZWYsXG4gIEhpZXJhcmNoeUdyYXBoTm9kZUluZm8sXG4gIEhpZXJhcmNoeUdyYXBoT3B0aW9uLFxuICBMYXlvdXRDb25maWdcbn0gZnJvbSAnZGFncmUtY29tcG91bmQnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcblxuZXhwb3J0IGludGVyZmFjZSBOekdyYXBoRGF0YURlZiBleHRlbmRzIEhpZXJhcmNoeUdyYXBoRGVmIHtcbiAgbm9kZXM6IE56R3JhcGhOb2RlRGVmW107XG4gIGVkZ2VzOiBOekdyYXBoRWRnZURlZltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE56R3JhcGhOb2RlRGVmIGV4dGVuZHMgSGllcmFyY2h5R3JhcGhOb2RlRGVmIHtcbiAgbGFiZWw/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTnpHcmFwaEVkZ2VEZWYgZXh0ZW5kcyBIaWVyYXJjaHlHcmFwaEVkZ2VEZWYge1xuICBsYWJlbD86IHN0cmluZztcbn1cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBOekdyYXBoT3B0aW9uIGV4dGVuZHMgSGllcmFyY2h5R3JhcGhPcHRpb24ge31cbmV4cG9ydCBkZWNsYXJlIHR5cGUgTnpSYW5rRGlyZWN0aW9uID0gJ1RCJyB8ICdCVCcgfCAnTFInIHwgJ1JMJztcblxuZXhwb3J0IGludGVyZmFjZSBOekdyYXBoR3JvdXBOb2RlIGV4dGVuZHMgSGllcmFyY2h5R3JhcGhOb2RlSW5mbyB7XG4gIG5vZGVzOiBBcnJheTxOekdyYXBoTm9kZSB8IE56R3JhcGhHcm91cE5vZGU+O1xuICBlZGdlczogTnpHcmFwaEVkZ2VbXTtcbiAgW2tleTogc3RyaW5nXTogTnpTYWZlQW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE56R3JhcGhOb2RlIGV4dGVuZHMgSGllcmFyY2h5QmFzZU5vZGVJbmZvIHtcbiAgaWQ6IE56U2FmZUFueTtcbiAgLy8gVE9ET1xuICBuYW1lOiBOelNhZmVBbnk7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBba2V5OiBzdHJpbmddOiBOelNhZmVBbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTnpHcmFwaEVkZ2UgZXh0ZW5kcyBIaWVyYXJjaHlCYXNlRWRnZUluZm8ge1xuICBpZDogTnpTYWZlQW55O1xuICB2OiBOelNhZmVBbnk7XG4gIHc6IE56U2FmZUFueTtcbiAgbGFiZWw/OiBzdHJpbmc7XG59XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1lbXB0eS1pbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgTnpMYXlvdXRTZXR0aW5nIGV4dGVuZHMgTGF5b3V0Q29uZmlnIHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTnpHcmFwaEJhc2VMYXlvdXQge1xuICBsYXlvdXQ6IHtcbiAgICBub2RlU2VwOiBudW1iZXI7XG4gICAgcmFua1NlcDogbnVtYmVyO1xuICAgIGVkZ2VTZXA6IG51bWJlcjtcbiAgfTtcbiAgc3ViU2NlbmU6IHtcbiAgICBwYWRkaW5nVG9wOiBudW1iZXI7XG4gICAgcGFkZGluZ0JvdHRvbTogbnVtYmVyO1xuICAgIHBhZGRpbmdMZWZ0OiBudW1iZXI7XG4gICAgcGFkZGluZ1JpZ2h0OiBudW1iZXI7XG4gICAgbGFiZWxIZWlnaHQ6IG51bWJlcjtcbiAgfTtcbiAgZGVmYXVsdENvbXBvdW5kTm9kZToge1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgbWF4TGFiZWxXaWR0aDogbnVtYmVyO1xuICB9O1xuICBkZWZhdWx0Tm9kZToge1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgbGFiZWxPZmZzZXQ6IG51bWJlcjtcbiAgICBtYXhMYWJlbFdpZHRoOiBudW1iZXI7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuelR5cGVEZWZpbml0aW9uPFQ+KCk6IChpdGVtOiB1bmtub3duKSA9PiBUIHtcbiAgcmV0dXJuIGl0ZW0gPT4gaXRlbSBhcyBUO1xufVxuXG4vLyB0c2xpbnQ6ZGlzYWJsZTpuby1zaGFkb3dlZC12YXJpYWJsZVxuZXhwb3J0IHR5cGUgTnpEZWVwUGFydGlhbDxUPiA9IHtcbiAgW1AgaW4ga2V5b2YgVF0/OiBUW1BdIGV4dGVuZHMgQXJyYXk8aW5mZXIgVT5cbiAgICA/IEFycmF5PE56RGVlcFBhcnRpYWw8VT4+XG4gICAgOiBUW1BdIGV4dGVuZHMgUmVhZG9ubHlBcnJheTxpbmZlciBVPlxuICAgID8gUmVhZG9ubHlBcnJheTxOekRlZXBQYXJ0aWFsPFU+PlxuICAgIDogTnpEZWVwUGFydGlhbDxUW1BdPjtcbn07XG5cbmV4cG9ydCB0eXBlIE56R3JhcGhMYXlvdXRDb25maWcgPSBOekRlZXBQYXJ0aWFsPE56R3JhcGhCYXNlTGF5b3V0PjtcbmV4cG9ydCBjb25zdCBOWl9HUkFQSF9MQVlPVVRfU0VUVElORzogTnpMYXlvdXRTZXR0aW5nID0ge1xuICBncmFwaDoge1xuICAgIG1ldGE6IHtcbiAgICAgIG5vZGVTZXA6IDUwLFxuICAgICAgcmFua1NlcDogNTAsXG4gICAgICBlZGdlU2VwOiA1XG4gICAgfVxuICB9LFxuICBzdWJTY2VuZToge1xuICAgIG1ldGE6IHtcbiAgICAgIHBhZGRpbmdUb3A6IDIwLFxuICAgICAgcGFkZGluZ0JvdHRvbTogMjAsXG4gICAgICBwYWRkaW5nTGVmdDogMjAsXG4gICAgICBwYWRkaW5nUmlnaHQ6IDIwLFxuICAgICAgbGFiZWxIZWlnaHQ6IDIwXG4gICAgfVxuICB9LFxuICBub2RlU2l6ZToge1xuICAgIG1ldGE6IHtcbiAgICAgIHdpZHRoOiA1MCxcbiAgICAgIG1heExhYmVsV2lkdGg6IDAsXG4gICAgICBoZWlnaHQ6IDUwXG4gICAgfSxcbiAgICBub2RlOiB7XG4gICAgICB3aWR0aDogNTAsXG4gICAgICBoZWlnaHQ6IDUwLFxuICAgICAgbGFiZWxPZmZzZXQ6IDEwLFxuICAgICAgbWF4TGFiZWxXaWR0aDogNDBcbiAgICB9LFxuICAgIGJyaWRnZToge1xuICAgICAgd2lkdGg6IDUsXG4gICAgICBoZWlnaHQ6IDUsXG4gICAgICByYWRpdXM6IDIsXG4gICAgICBsYWJlbE9mZnNldDogMFxuICAgIH1cbiAgfVxufTtcblxuLy8gWm9vbSBpbnRlcmZhY2VcblxuZXhwb3J0IGludGVyZmFjZSBOelpvb21UcmFuc2Zvcm0ge1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgazogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlbGF0aXZlUG9zaXRpb25JbmZvIHtcbiAgdG9wTGVmdDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xuICBib3R0b21SaWdodDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xufVxuIl19