{"version":3,"sources":["../../components/timeline/timeline.service.ts","../../components/timeline/typings.ts","../../components/timeline/timeline-item.component.ts","../../components/timeline/timeline.component.ts","../../components/timeline/timeline.module.ts"],"names":["TimelineService","this","check$","ReplaySubject","prototype","markForCheck","next","Injectable","TimelineTimeDefaultColors","NzTimelineItemComponent","cdr","timelineService","nzColor","isLast","borderColor","ngOnChanges","changes","updateCustomColor","detectChanges","color","findIndex","i","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","selector","exportAs","template","ChangeDetectorRef","ViewChild","static","Input","NzTimelineComponent","directionality","nzMode","nzReverse","isPendingBoolean","timelineItems","dir","destroy$","Subject","nzPending","simpleChangeActivated","updateChildren","currentValue","ngOnInit","_this","pipe","takeUntil","subscribe","_a","change","direction","value","ngAfterContentInit","listOfItems","ngOnDestroy","complete","length","length_1","forEach","item","index","position","mode","undefined","getInferredTimelineItemPosition","toArray","reverse","simpleChange","previousValue","isFirstChange","providers","Directionality","decorators","type","Optional","ContentChildren","NgModule","declarations","exports","imports","BidiModule","CommonModule","PlatformModule","NzIconModule","NzOutletModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class TimelineService {\n  check$ = new ReplaySubject(1);\n  markForCheck(): void {\n    this.check$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst TimelineModes = ['left', 'alternate', 'right', 'custom'] as const;\nexport type NzTimelineMode = typeof TimelineModes[number];\n\nconst TimelinePositions = ['left', 'right'] as const;\nexport type NzTimelinePosition = typeof TimelinePositions[number];\n\nexport const TimelineTimeDefaultColors = ['red', 'blue', 'green', 'grey', 'gray'] as const;\nexport type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineItemColor, NzTimelinePosition, TimelineTimeDefaultColors } from './typings';\n\nfunction isDefaultColor(color?: string): boolean {\n  return TimelineTimeDefaultColors.findIndex(i => i === color) !== -1;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  template: `\n    <ng-template #template>\n      <li\n        class=\"ant-timeline-item\"\n        [class.ant-timeline-item-right]=\"(nzPosition || position) === 'right'\"\n        [class.ant-timeline-item-left]=\"(nzPosition || position) === 'left'\"\n        [class.ant-timeline-item-last]=\"isLast\"\n      >\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div\n          class=\"ant-timeline-item-head\"\n          [class.ant-timeline-item-head-red]=\"nzColor === 'red'\"\n          [class.ant-timeline-item-head-blue]=\"nzColor === 'blue'\"\n          [class.ant-timeline-item-head-green]=\"nzColor === 'green'\"\n          [class.ant-timeline-item-head-gray]=\"nzColor === 'gray'\"\n          [class.ant-timeline-item-head-custom]=\"!!nzDot\"\n          [style.border-color]=\"borderColor\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"nzDot\">{{ nzDot }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-content></ng-content>\n        </div>\n      </li>\n    </ng-template>\n  `\n})\nexport class NzTimelineItemComponent implements OnChanges {\n  @ViewChild('template', { static: false }) template!: TemplateRef<void>;\n\n  @Input() nzPosition?: NzTimelinePosition;\n  @Input() nzColor: NzTimelineItemColor = 'blue';\n  @Input() nzDot?: string | TemplateRef<void>;\n\n  isLast = false;\n  borderColor: string | null = null;\n  position?: NzTimelinePosition;\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.timelineService.markForCheck();\n    if (changes.nzColor) {\n      this.updateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private updateCustomColor(): void {\n    this.borderColor = isDefaultColor(this.nzColor) ? null : this.nzColor;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineMode, NzTimelinePosition } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  providers: [TimelineService],\n  exportAs: 'nzTimeline',\n  template: `\n    <ul\n      class=\"ant-timeline\"\n      [class.ant-timeline-right]=\"nzMode === 'right'\"\n      [class.ant-timeline-alternate]=\"nzMode === 'alternate' || nzMode === 'custom'\"\n      [class.ant-timeline-pending]=\"!!nzPending\"\n      [class.ant-timeline-reverse]=\"nzReverse\"\n      [class.ant-timeline-rtl]=\"dir === 'rtl'\"\n    >\n      <!-- pending dot (reversed) -->\n      <ng-container *ngIf=\"nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- timeline items -->\n      <ng-container *ngFor=\"let item of timelineItems\">\n        <ng-template [ngTemplateOutlet]=\"item.template\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"!nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- pending dot -->\n    </ul>\n    <ng-template #pendingTemplate>\n      <li *ngIf=\"nzPending\" class=\"ant-timeline-item ant-timeline-item-pending\">\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div class=\"ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue\">\n          <ng-container *nzStringTemplateOutlet=\"nzPendingDot\">\n            {{ nzPendingDot }}\n            <i *ngIf=\"!nzPendingDot\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-container *nzStringTemplateOutlet=\"nzPending\">\n            {{ isPendingBoolean ? '' : nzPending }}\n          </ng-container>\n        </div>\n      </li>\n    </ng-template>\n    <!-- Grasp items -->\n    <ng-content></ng-content>\n  `\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  @ContentChildren(NzTimelineItemComponent) listOfItems!: QueryList<NzTimelineItemComponent>;\n\n  @Input() nzMode: NzTimelineMode = 'left';\n  @Input() nzPending?: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot?: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n  timelineItems: NzTimelineItemComponent[] = [];\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private timelineService: TimelineService,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzMode, nzReverse, nzPending } = changes;\n\n    if (simpleChangeActivated(nzMode) || simpleChangeActivated(nzReverse)) {\n      this.updateChildren();\n    }\n\n    if (nzPending) {\n      this.isPendingBoolean = nzPending.currentValue === true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.timelineService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n\n    this.listOfItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateChildren();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfItems && this.listOfItems.length) {\n      const length = this.listOfItems.length;\n\n      this.listOfItems.forEach((item, index) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position = getInferredTimelineItemPosition(index, this.nzMode);\n        item.detectChanges();\n      });\n      this.timelineItems = this.nzReverse ? this.listOfItems.toArray().reverse() : this.listOfItems.toArray();\n    }\n    this.cdr.markForCheck();\n  }\n}\n\nfunction simpleChangeActivated(simpleChange?: SimpleChange): boolean {\n  return !!(simpleChange && (simpleChange.previousValue !== simpleChange.currentValue || simpleChange.isFirstChange()));\n}\n\nfunction getInferredTimelineItemPosition(index: number, mode: NzTimelineMode): NzTimelinePosition | undefined {\n  return mode === 'custom'\n    ? undefined\n    : mode === 'left'\n    ? 'left'\n    : mode === 'right'\n    ? 'right'\n    : mode === 'alternate' && index % 2 === 0\n    ? 'left'\n    : 'right';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { NzTimelineComponent } from './timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [BidiModule, CommonModule, PlatformModule, NzIconModule, NzOutletModule]\n})\nexport class NzTimelineModule {}\n"]}