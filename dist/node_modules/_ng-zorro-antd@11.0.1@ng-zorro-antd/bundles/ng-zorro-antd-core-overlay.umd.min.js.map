{"version":3,"sources":["../../components/core/overlay/nz-connected-overlay.ts","../../components/core/overlay/nz-overlay.module.ts","../../components/core/overlay/overlay-position.ts"],"names":["cdkConnectedOverlay","this","backdropClass","Directive","args","selector","exportAs","CdkConnectedOverlay","NgModule","declarations","NzConnectedOverlayDirective","exports","POSITION_MAP","top","ConnectionPositionPair","originX","originY","overlayX","overlayY","topCenter","topLeft","topRight","right","rightTop","rightBottom","bottom","bottomCenter","bottomLeft","bottomRight","left","leftTop","leftBottom","DEFAULT_TOOLTIP_POSITIONS","DEFAULT_CASCADER_POSITIONS","DEFAULT_MENTION_TOP_POSITIONS","DEFAULT_MENTION_BOTTOM_POSITIONS","position","placement","connectionPair"],"mappings":"ugBAaE,SAAoBA,GAAAC,KAAAD,oBAAAA,EAClBC,KAAKD,oBAAoBE,cAAgB,uDAN5CC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4CACVC,SAAU,kEALHC,EAAAA,6BCOT,iCAJCC,EAAAA,SAAQJ,KAAA,CAAC,CACRK,aAAc,CAACC,GACfC,QAAS,CAACD,WCHCE,EAA0D,CACrEC,IAAK,IAAIC,EAAAA,uBAAuB,CAAEC,QAAS,SAAUC,QAAS,OAAS,CAAEC,SAAU,SAAUC,SAAU,WACvGC,UAAW,IAAIL,EAAAA,uBAAuB,CAAEC,QAAS,SAAUC,QAAS,OAAS,CAAEC,SAAU,SAAUC,SAAU,WAC7GE,QAAS,IAAIN,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,OAAS,CAAEC,SAAU,QAASC,SAAU,WACzGG,SAAU,IAAIP,EAAAA,uBAAuB,CAAEC,QAAS,MAAOC,QAAS,OAAS,CAAEC,SAAU,MAAOC,SAAU,WACtGI,MAAO,IAAIR,EAAAA,uBAAuB,CAAEC,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,WACxGK,SAAU,IAAIT,EAAAA,uBAAuB,CAAEC,QAAS,MAAOC,QAAS,OAAS,CAAEC,SAAU,QAASC,SAAU,QACxGM,YAAa,IAAIV,EAAAA,uBAAuB,CAAEC,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,WAC9GO,OAAQ,IAAIX,EAAAA,uBAAuB,CAAEC,QAAS,SAAUC,QAAS,UAAY,CAAEC,SAAU,SAAUC,SAAU,QAC7GQ,aAAc,IAAIZ,EAAAA,uBAAuB,CAAEC,QAAS,SAAUC,QAAS,UAAY,CAAEC,SAAU,SAAUC,SAAU,QACnHS,WAAY,IAAIb,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,QAC/GU,YAAa,IAAId,EAAAA,uBAAuB,CAAEC,QAAS,MAAOC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,QAC5GW,KAAM,IAAIf,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,WACvGY,QAAS,IAAIhB,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,OAAS,CAAEC,SAAU,MAAOC,SAAU,QACvGa,WAAY,IAAIjB,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,YAGlGc,EAA4B,CAACpB,EAAaC,IAAKD,EAAaU,MAAOV,EAAaa,OAAQb,EAAaiB,MAErGI,EAA6B,CAACrB,EAAae,WAAYf,EAAagB,YAAahB,EAAaQ,QAASR,EAAaS,UAEpHa,EAAgC,CAC3C,IAAIpB,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,QAASC,SAAU,WACnG,IAAIJ,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,YAGtFiB,EAAmC,CAC9CvB,EAAae,WACb,IAAIb,EAAAA,uBAAuB,CAAEC,QAAS,QAASC,QAAS,UAAY,CAAEC,SAAU,MAAOC,SAAU,8OAGlEkB,GAC/B,IAAK,IAAMC,KAAazB,EACtB,GACEwB,EAASE,eAAevB,UAAYH,EAAayB,GAAWtB,SAC5DqB,EAASE,eAAetB,UAAYJ,EAAayB,GAAWrB,SAC5DoB,EAASE,eAAerB,WAAaL,EAAayB,GAAWpB,UAC7DmB,EAASE,eAAepB,WAAaN,EAAayB,GAAWnB,SAE7D,OAAOmB","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n  exportAs: 'nzConnectedOverlay'\n})\nexport class NzConnectedOverlayDirective {\n  constructor(private cdkConnectedOverlay: CdkConnectedOverlay) {\n    this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\nimport { NzConnectedOverlayDirective } from './nz-connected-overlay';\n\n@NgModule({\n  declarations: [NzConnectedOverlayDirective],\n  exports: [NzConnectedOverlayDirective]\n})\nexport class NzOverlayModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n  top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n  topCenter: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n  topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n  topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n  right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\n  rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n  rightBottom: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n  bottomCenter: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n  bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n  bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n  left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\n  leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\n  leftBottom: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n};\n\nexport const DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\n\nexport const DEFAULT_CASCADER_POSITIONS = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topLeft, POSITION_MAP.topRight];\n\nexport const DEFAULT_MENTION_TOP_POSITIONS = [\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n];\n\nexport const DEFAULT_MENTION_BOTTOM_POSITIONS = [\n  POSITION_MAP.bottomLeft,\n  new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n];\n\nexport function getPlacementName(position: ConnectedOverlayPositionChange): string | undefined {\n  for (const placement in POSITION_MAP) {\n    if (\n      position.connectionPair.originX === POSITION_MAP[placement].originX &&\n      position.connectionPair.originY === POSITION_MAP[placement].originY &&\n      position.connectionPair.overlayX === POSITION_MAP[placement].overlayX &&\n      position.connectionPair.overlayY === POSITION_MAP[placement].overlayY\n    ) {\n      return placement;\n    }\n  }\n  return undefined;\n}\n"]}